<?php  // *** DO NOT EDIT THIS FILE, CREATE A COPY !!

/**
 * (Popup) Gallery layout  --  Pannellum
 *
 * This layout supports inline_info, pretext, posttext
 */

$vp_max_height = (int) $field->parameters->get( $PPFX_ . 'vp_max_height', 50 );
$vp_max_height = $vp_max_height >= 20 ? $vp_max_height : 20;
$vp_max_height = $vp_max_height <= 95 ? $vp_max_height : 95;

// ***
// *** Values loop
// ***

$i = -1;

foreach ($values as $n => $value)
{
	// Include common layout code for preparing values, but you may copy here to customize
	$result = include( JPATH_ROOT . '/plugins/flexicontent_fields/image/tmpl_common/prepare_value_display.php' );
	if ($result === _FC_CONTINUE_) continue;
	if ($result === _FC_BREAK_) break;

	$w = isset($value['size_w_' . $size]) ? $value['size_w_' . $size] : $field->parameters->get('w_' . $size, self::$default_widths[$size]);
	$h = isset($value['size_h_' . $size]) ? $value['size_h_' . $size] : $field->parameters->get('h_' . $size, self::$default_heights[$size]);

	$img_legend_custom = '
	<div id="panorama_' . $uniqueid . '" style="width: ' . $w . 'px; height: ' . $w . 'px; max-width: 100%; max-height: ' . $vp_max_height  . 'vh;"></div>
	<script>
		pannellum.viewer(\'panorama_' . $uniqueid . '\', {
			"type": "equirectangular",
			"panorama": "' . JUri::root(true).'/'.$src . '",
			"preview": "' . $abs_src . '",
			"title": "' . $title_encoded . '",
		});
	</script>	
	';

	$field->{$prop}[] = $pretext
		. $img_legend_custom
		. $inline_info
		. $posttext;
}


// ***
// *** Add per field custom JS
// ***

if (!isset(static::$js_added[$field->id][__FILE__]) )
{
	flexicontent_html::loadFramework('pannellum');

	$js = "";

	if ($js) JFactory::getDocument()->addScriptDeclaration($js);

	static::$js_added[$field->id][__FILE__] = true;
}



/**
 * Include common layout code before finalize values
 */

$result = include( JPATH_ROOT . '/plugins/flexicontent_fields/image/tmpl_common/before_values_finalize.php' );
if ($result !== _FC_RETURN_)
{
	// ***
	// *** Add container HTML (if required by current layout) and add value separator (if supported by current layout), then finally apply open/close tags
	// ***

	// Add value separator
	$field->{$prop} = implode($separatorf, $field->{$prop});

	// Apply open/close tags
	$field->{$prop}  = $opentag . $field->{$prop} . $closetag;
}
